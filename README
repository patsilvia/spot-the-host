Basic
-----
A host name can be a unfriendly name when it randomly generated. Besides the hostname itself, 
if a domain name part in fqdn can be more than one domain, it is pain for me to ssh to a certain specific host.
Without using the fqdn, it is nearly impossible to quickly ssh to a certain host (as because domain name part 
can be varied too, so forget the domain search).

This application will use bash's complete feature to help complete those crytic hostnames from a list of hostnames
that you're working with. Just simply using two tabs behind ssh.

Setup
-----

Simply clone repo to any directory. 

* In the file spot_hosts, 
hosts="echo `cat $HOME/.ssh/myhosts`"
This line is where you locate a file that has a list of hostnames you're working with.

* In the file myhosts, this file is where you list host names.
$ cat myhosts 
cse123.int.domainx.com
cse123.int.tdomainy.com
cxt783.int.wdomainy.com

+ Activate the completion for ssh.

# Verify if ssh is not already registered.
$ complete -p
$ 

$ . spot_hosts 

# complete for ssh command is kicked in.
$ complete -p
complete -F _ssh ssh


Usage
-----
eg. 1
$ ssh cs[TAB][TAB]
It will look like this
$ ssh cs123.
cse123.int.domainx.com   cse123.int.tdomainy.com  cse123.th.superdom.com

eg. 2
$ ssh yf[TAB] --> ssh yf12.int.anotherexam.com


Fact
----
- Purposely used for mac os x. Other platform where bash works should support.
- On Mac, if you already have brew install bash-complete, this will collide with brew version's ssh completion.

Reference
---------
- http://www.debian-administration.org/article/316/An_introduction_to_bash_completion_part_1
- http://www.debian-administration.org/article/317/An_introduction_to_bash_completion_part_2
